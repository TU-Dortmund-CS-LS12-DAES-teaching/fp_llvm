; ModuleID = 'src/ns.c'
source_filename = "src/ns.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@keys = dso_local global [5 x [5 x [5 x [5 x i32]]]] [[5 x [5 x [5 x i32]]] zeroinitializer, [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]], [5 x [5 x i32]] [[5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1], [5 x i32] [i32 1, i32 1, i32 1, i32 1, i32 1]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]], [5 x [5 x i32]] [[5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2], [5 x i32] [i32 2, i32 2, i32 2, i32 2, i32 2]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]], [5 x [5 x i32]] [[5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3], [5 x i32] [i32 3, i32 3, i32 3, i32 3, i32 3]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4]], [5 x [5 x i32]] [[5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4], [5 x i32] [i32 4, i32 4, i32 4, i32 4, i32 401]]]], align 16
@answer = dso_local global [5 x [5 x [5 x [5 x i32]]]] [[5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]], [5 x [5 x i32]] [[5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123], [5 x i32] [i32 123, i32 123, i32 123, i32 123, i32 123]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]], [5 x [5 x i32]] [[5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234], [5 x i32] [i32 234, i32 234, i32 234, i32 234, i32 234]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]], [5 x [5 x i32]] [[5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0], [5 x i32] [i32 345, i32 345, i32 345, i32 345, i32 0]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]], [5 x [5 x i32]] [[5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456], [5 x i32] [i32 456, i32 456, i32 456, i32 456, i32 456]]], [5 x [5 x [5 x i32]]] [[5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567]], [5 x [5 x i32]] [[5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 567], [5 x i32] [i32 567, i32 567, i32 567, i32 567, i32 1111]]]], align 16

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @foo(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %80, %1
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 5
  br i1 %10, label %11, label %83

11:                                               ; preds = %8
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %76, %11
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 5
  br i1 %14, label %15, label %79

15:                                               ; preds = %12
  store i32 0, i32* %6, align 4
  br label %16

16:                                               ; preds = %72, %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 5
  br i1 %18, label %19, label %75

19:                                               ; preds = %16
  store i32 0, i32* %7, align 4
  br label %20

20:                                               ; preds = %68, %19
  %21 = load i32, i32* %7, align 4
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %71

23:                                               ; preds = %20
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]], [5 x [5 x [5 x [5 x i32]]]]* @keys, i64 0, i64 %25
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [5 x [5 x [5 x i32]]], [5 x [5 x [5 x i32]]]* %26, i64 0, i64 %28
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %29, i64 0, i64 %31
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %32, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %3, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %67

39:                                               ; preds = %23
  %40 = load i32, i32* %4, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]], [5 x [5 x [5 x [5 x i32]]]]* @answer, i64 0, i64 %41
  %43 = load i32, i32* %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [5 x [5 x [5 x i32]]], [5 x [5 x [5 x i32]]]* %42, i64 0, i64 %44
  %46 = load i32, i32* %6, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %45, i64 0, i64 %47
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %48, i64 0, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* %4, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [5 x [5 x [5 x [5 x i32]]]], [5 x [5 x [5 x [5 x i32]]]]* @keys, i64 0, i64 %54
  %56 = load i32, i32* %5, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [5 x [5 x [5 x i32]]], [5 x [5 x [5 x i32]]]* %55, i64 0, i64 %57
  %59 = load i32, i32* %6, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [5 x [5 x i32]], [5 x [5 x i32]]* %58, i64 0, i64 %60
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %61, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %52, %65
  store i32 %66, i32* %2, align 4
  br label %84

67:                                               ; preds = %23
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %7, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %7, align 4
  br label %20, !llvm.loop !6

71:                                               ; preds = %20
  br label %72

72:                                               ; preds = %71
  %73 = load i32, i32* %6, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %6, align 4
  br label %16, !llvm.loop !8

75:                                               ; preds = %16
  br label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %5, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %5, align 4
  br label %12, !llvm.loop !9

79:                                               ; preds = %12
  br label %80

80:                                               ; preds = %79
  %81 = load i32, i32* %4, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %4, align 4
  br label %8, !llvm.loop !10

83:                                               ; preds = %8
  store i32 -1, i32* %2, align 4
  br label %84

84:                                               ; preds = %83, %39
  %85 = load i32, i32* %2, align 4
  ret i32 %85
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @main() #0 {
  %1 = call i32 @foo(i32 noundef 400)
  ret void
}

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"Ubuntu clang version 14.0.0-1ubuntu1"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
